package FutureWeapons;


import items.ItemPlasmaCanister;
import items.ItemPlasmaRifle;
import net.minecraft.block.Block;
import net.minecraft.init.Blocks;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.registry.EntityRegistry;
import cpw.mods.fml.common.registry.GameRegistry;
import entities.entityplasmabolt;


/**
 * This @Mod annotation tells forge that we are creating a new mod. Without this, forge wont
 * find your mod. This takes 2 values, a modid, which is a "name" for your mod. This cant be the
 * same for ANY mod. So find a name which is new. Version is the current mod version.
 */
@Mod(modid = Reference.MODID, version = Reference.VERSION)
public class FutureWeaponsMain 
{
	@SidedProxy( clientSide = "FutureWeapons.ClientProxy", serverSide = "FutureWeapons.CommonProxy" )
	public static CommonProxy proxy;

  public static Item Plasma_Rifle;
  public static Item Plasma_Canister;
	@EventHandler
	public void preInit(FMLPreInitializationEvent event)
	{
        //Block handlers, handles all blocks


        //Item handlers, handles all items
	Plasma_Rifle = new ItemPlasmaRifle();
	Plasma_Canister = new ItemPlasmaCanister();
	
	RegisterHelper.registerItem(Plasma_Rifle);
	RegisterHelper.registerItem(Plasma_Canister);

	ItemStack redstoneStack = new ItemStack(Items.redstone);
	ItemStack redstonetorchStack = new ItemStack(Blocks.redstone_torch);
	ItemStack ironStack = new ItemStack(Items.iron_ingot);
	ItemStack waterbucketStack = new ItemStack(Items.water_bucket);
{
	GameRegistry.addShapedRecipe(new ItemStack(Plasma_Canister, 16), new Object []{ "xwx", "yzy", "ywy",
        'w', redstoneStack, 'x', redstonetorchStack, 'y', ironStack, 'z', waterbucketStack});

	
	int modEntityID = 0;
	
	EntityRegistry.registerModEntity(entityplasmabolt.class, "Plasma Bolt", ++modEntityID, this, 64, 10, 
	true);
	proxy.registerRenderThings();
   }
   
	{
		}
	}}





